{"version":3,"sources":["constants/schedule-opts.js","store/workouts.js","utils/arrays.js","utils/weights.js","models/workouts.js","store/index.js","web/register-service-worker.js","web/components/Templates/Nothing.js","containers/Start.js","containers/StartWarmup.js","containers/Finish.js","containers/Exercise.js","constants/messages.js","web/components/UI/SingleClick.js","web/components/UI/ExportProgressButton.js","web/utils/export.js","web/components/Start.js","web/components/UI/BinaryClick.js","constants/urls.js","web/styles/utils.js","web/components/Exercise.js","web/components/StartWarmup.js","web/components/Finish.js","web/components/UI/Error.js","web/routes/index.js","web/components/UI/Loading.js","web/index.js"],"names":["schedule_opts","warmup","startRatio","ratio","incrementFactor","variantSwitchCount","historyKeepLength","weightReductionFactor","failureRatio","variants","workouts","legsShoulders","A","B","back","chest","exercises","deadlift","sets","increments","startingWeight","barbellBenchpress","squat","bentOverRow","chinUp","skullCrusherSuperSet","dumbbellBenchpress","rearFly","lateralRaise","inclineBarbellBenchpress","dip","uprightRow","overheadPress","variant","schedule","workout","Object","keys","exercise","set","goalWeight","goalReps","history","reduce","obj","item","Array","from","length","workoutCount","numberOfSets","getNextLoopedArrayItem","array","index","indexOf","getTheDamnIndex","map","i","toString","calculateGoalWeight","exerciseInfo","possibleRepGroups","_history$","previousWeight","weight","previousSets","previousReps","reps","foundIndex","reduceWeight","previousGroup","getOccurredFailures","ceilWeightToX","calculateStartingWarmupWeight","calculateCurrentSetFormat","_history$2","saveToHistory","performance","objectSpread","defineProperty","unshift","slice","x","Math","ceil","carry","success","models_workouts","state","initState","setFormat","isWarmingUp","isFinished","hasStarted","reducers","startWorkout","startExercise","completeSet","payload","shouldContinueWarmingUp","listOfExercisesInWorkout","exerciseIndex","nextExercise","nextSetFormat","finishWorkout","nextWorkout","nextVariant","persistPlugin","createPersistPlugin","version","storage","blacklist","loadingPlugin","createLoadingPlugin","configureStore","store","init","models","redux","middlewares","plugins","persistor","getPersistor","dispatch","Boolean","window","location","hostname","match","Template","_ref","pageTitle","children","react_default","a","createElement","Container","Helmet","Row","Col","sm","defaultProps","Start","render","_this$props","_this","props","Layout","onStart","workoutHistory","onClick","nextPage","PureComponent","connect","StartWarmup","Finish","onFinish","importProgress","onClickImport","importHistory","Exercise","onCompleteSet","generalMessages","letsGo","passedSet","failedSet","skipSet","ok","goodJob","keepTrying","readyForWorkout","firstExercise","firstAWarmup","currentExerciseIs","repsAre","weightIs","kg","exerciseIs","thisIsAWarmupSet","workoutFinished","comeBackIn2Days","readyForNextWorkout","exportProgress","SingleClick","Jumbotron","fluid","className","title","subtitle","Button","color","size","block","buttonText","ExportProgressButton","json","str","JSON","stringify","dataUri","concat","encodeURIComponent","linkElement","document","setAttribute","click","exportJsonToFile","handleClick","push","react","UI_SingleClick","UI_ExportProgressButton","withRouter","BinaryClick","ButtonGroup","failureButtonText","no","successButtonText","yes","validationText","exerciseUrls","colors","rotateColors","floor","random","responseToPerformance","setState","renderSubtitle","exerciseText","href","_this$props2","UI_BinaryClick","Component","Error","content","lg","react_router_dom","to","Index","react_router","exact","path","Nothing","containers_Start","assign","StartComponent","containers_StartWarmup","StartWarmupComponent","containers_Finish","FinishComponent","containers_Exercise","ExerciseComponent","UI_Error","Loading","md","offset","Progress","bar","animated","value","ReactDOM","es","integration_react","loading","UI_Loading","basename","routes","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bfacc7e2.chunk.js","sourcesContent":["export default {\n  warmup: {\n    startRatio: 0.5,\n    ratio: 0.7,\n    incrementFactor: 1.2,\n  },\n  variantSwitchCount: 30,\n  historyKeepLength: 15,\n  weightReductionFactor: 0.8,\n  failureRatio: 4,\n\n  variants: [\n    'A',\n    'B',\n  ],\n\n  workouts: {\n    legsShoulders: {\n      A: ['squat', 'overheadPress', 'rearFly'],\n      B: ['squat', 'overheadPress', 'rearFly', 'lateralRaise'],\n\n    },\n    back: {\n      A: ['deadlift', 'bentOverRow', 'chinUp'],\n      B: ['deadlift', 'bentOverRow', 'chinUp', 'uprightRow'],\n    },\n    chest: {\n      A: ['barbellBenchpress', 'skullCrusherSuperSet', 'dip'],\n      B: ['dumbbellBenchpress', 'skullCrusherSuperSet', 'dip', 'inclineBarbellBenchpress'],\n    },\n  },\n\n  exercises: {\n    deadlift: {\n      sets: {\n        A: [[5]],\n        B: [[8], [10], [12]],\n      },\n      increments: 2.5,\n      startingWeight: 20,\n    },\n    barbellBenchpress: {\n      sets: {\n        A: [[5, 5, 5, 5, 5]],\n        B: [[8, 8, 8], [10, 10, 10], [12, 12, 12]],\n      },\n      increments: 2.5,\n      startingWeight: 20,\n    },\n    squat: {\n      sets: {\n        A: [[5, 5, 5, 5, 5]],\n        B: [[8, 8, 8], [10, 10, 10], [12, 12, 12]],\n      },\n      increments: 2.5,\n      startingWeight: 20,\n    },\n    bentOverRow: {\n      sets: {\n        A: [[5, 5, 5, 5, 5]],\n        B: [[8, 8, 8], [10, 10, 10], [12, 12, 12]],\n      },\n      increments: 2.5,\n      startingWeight: 20,\n    },\n    chinUp: {\n      sets: {\n        A: [[5, 5, 5, 5, 5]],\n        B: [[5, 5, 5, 5, 5]],\n      },\n      increments: 0,\n      startingWeight: 0,\n    },\n    skullCrusherSuperSet: {\n      sets: {\n        A: [[8, 8, 8], [10, 10, 10], [12, 12, 12]],\n        B: [[8, 8, 8], [10, 10, 10], [12, 12, 12]],\n      },\n      increments: 2.5,\n      startingWeight: 10,\n    },\n    dumbbellBenchpress: {\n      sets: {\n        A: [[5, 5, 5, 5, 5]],\n        B: [[8, 8, 8], [10, 10, 10], [12, 12, 12]],\n      },\n      increments: 2,\n      startingWeight: 8,\n    },\n    rearFly: {\n      sets: {\n        A: [[8, 8, 8], [10, 10, 10], [12, 12, 12]],\n        B: [[8, 8, 8], [10, 10, 10], [12, 12, 12]],\n      },\n      increments: 2,\n      startingWeight: 4,\n    },\n    lateralRaise: {\n      sets: {\n        A: [[8, 8, 8], [10, 10, 10], [12, 12, 12]],\n        B: [[8, 8, 8], [10, 10, 10], [12, 12, 12]],\n      },\n      increments: 2,\n      startingWeight: 2,\n    },\n    inclineBarbellBenchpress: {\n      sets: {\n        A: [[5, 5, 5, 5, 5]],\n        B: [[8, 8, 8], [10, 10, 10], [12, 12, 12]],\n      },\n      increments: 2.5,\n      startingWeight: 20,\n    },\n    dip: {\n      sets: {\n        A: [[5, 5, 5, 5, 5]],\n        B: [[8, 8, 8], [10, 10, 10], [12, 12, 12]],\n      },\n      increments: 2.5,\n      startingWeight: 0,\n    },\n    uprightRow: {\n      sets: {\n        A: [[5, 5, 5, 5, 5]],\n        B: [[8, 8, 8], [10, 10, 10], [12, 12, 12]],\n      },\n      increments: 2.5,\n      startingWeight: 10,\n    },\n    overheadPress: {\n      sets: {\n        A: [[5, 5, 5, 5, 5]],\n        B: [[8, 8, 8], [10, 10, 10], [12, 12, 12]],\n      },\n      increments: 2.5,\n      startingWeight: 10,\n    },\n  },\n};\n","import schedule from '../constants/schedule-opts';\n\nexport default (() => {\n  const variant = schedule.variants[0];\n  const workout = Object.keys(schedule.workouts)[0];\n  const exercise = schedule.workouts[workout][variant][0];\n  const history = Object.keys(schedule.exercises).reduce((obj, item) => {\n    // eslint-disable-next-line\n    obj[item] = Array.from({ length: schedule.historyKeepLength }, () => new Object());\n    return obj;\n  }, {});\n\n  return {\n    variant,\n    workout,\n    set: 0,\n    exercise,\n    goalWeight: 0,\n    goalReps: 0,\n    history,\n    workoutCount: 0,\n    numberOfSets: schedule.exercises[exercise].sets[variant][0].length,\n  };\n})();\n","export function getNextLoopedArrayItem(array, item) {\n  let index = array.indexOf(item);\n  if (index === -1) {\n    index = getTheDamnIndex(array, item);\n  }\n  return array[(index + 1) % array.length];\n}\n\nexport function getTheDamnIndex(array, item) {\n  return array\n    .map(i => i.toString())\n    .indexOf(item.toString());\n}\n\nexport function saveToLimitedLengthArray(array, item, length) {\n  array.unshift(item);\n  return array.slice(0, length);\n}\n","import schedule from '../constants/schedule-opts';\nimport { saveToLimitedLengthArray, getTheDamnIndex, getNextLoopedArrayItem } from './arrays';\n\nexport function calculateGoalWeight(exerciseInfo, variant, history) {\n  const possibleRepGroups = exerciseInfo.sets[variant];\n  const { weight: previousWeight, sets: previousSets, reps: previousReps } = history[0];\n\n  if (!previousSets) {\n    // First time ever performing an exercise.\n    return exerciseInfo.startingWeight;\n  }\n\n  const foundIndex = getTheDamnIndex(possibleRepGroups, previousSets);\n\n  if (foundIndex === -1) {\n    // New variant that we've never seen before\n    return reduceWeight(previousWeight, exerciseInfo.increments);\n  }\n\n  const previousGroup = possibleRepGroups[foundIndex];\n\n  if (history[previousGroup.length - 1].reps !== previousReps) {\n    // we're in the same workout\n    return previousWeight;\n  }\n\n  // We've just started a new workout\n  // check for failures in the previous workout\n  if (!getOccurredFailures(history, previousGroup.length)) {\n    // if we're in the last rep group of the variant, increase the weight\n    if (foundIndex === possibleRepGroups.length - 1) {\n      return increaseWeight(previousWeight, exerciseInfo.increments);\n    }\n\n    // otherwise the reps will just increase.\n    return previousWeight;\n  }\n\n  // check the whole history for a really bad plateau\n  if (tooManyFailures(getOccurredFailures(history, history.length))) {\n  // we're having bad time, reduce and regroup.\n    return reduceWeight(previousWeight, exerciseInfo.increments);\n  }\n  // we failed less than once per training in the last three trainings.\n  return previousWeight;\n}\n\nexport function calculateNextWarmupWeight(weight, increments) {\n  return ceilWeightToX(weight * schedule.warmup.incrementFactor, increments);\n}\n\nexport function calculateStartingWarmupWeight(goalWeight, increments) {\n  return ceilWeightToX(goalWeight * schedule.warmup.startRatio, increments);\n}\n\nexport function calculateCurrentSetFormat(exerciseInfo, variant, history) {\n  const possibleRepGroups = exerciseInfo.sets[variant];\n  const { sets: previousSets, reps: previousReps } = history[0];\n\n  if (!previousSets) {\n    return exerciseInfo.sets[variant][0];\n  }\n\n  const foundIndex = getTheDamnIndex(possibleRepGroups, previousSets);\n\n  if (foundIndex === -1) {\n    // New variant that we've never seen before\n    return exerciseInfo.sets[variant][0];\n  }\n\n  const previousGroup = possibleRepGroups[foundIndex];\n\n  if (history[previousGroup.length - 1].reps !== previousReps || getOccurredFailures(history, previousGroup.length)) {\n    // we're in the same workout\n    // or we previously failed a set\n    return previousSets;\n  }\n\n  // We've just started a new workout\n  return getNextLoopedArrayItem(exerciseInfo.sets[variant], previousGroup);\n}\n\nexport function calculateCurrentReps(exerciseInfo, variant, history) {\n  return calculateCurrentSetFormat(exerciseInfo, variant, history)[0];\n}\n\nexport function shouldContinueWarmingUp(weight, goalWeight) {\n  return weight < schedule.warmup.ratio * goalWeight;\n}\n\nexport function calculateNextVariant(workoutCount, variant) {\n  if ((workoutCount + 1) % schedule.variantSwitchCount !== 0) {\n    // stick with current variant unless we've reached the switch threshold.\n    return variant;\n  }\n\n  // Get next variant, looping around.\n  return getNextLoopedArrayItem(schedule.variants, variant);\n}\n\nexport function saveToHistory(history, exercise, performance) {\n  return {\n    ...history,\n    [exercise]: saveToLimitedLengthArray(\n      history[exercise],\n      performance,\n      schedule.historyKeepLength,\n    ),\n  };\n}\n\nexport function ceilWeightToX(weight, x) {\n  if (x < 1) {\n    x = 1;\n  }\n  return Math.ceil(weight / x) * x;\n}\n\nexport function getOccurredFailures(history, length) {\n  return history.slice(0, length).reduce((carry, item) => {\n    carry += item.success ? 0 : 1;\n    return carry;\n  }, 0);\n}\n\nexport function reduceWeight(weight, increments) {\n  return ceilWeightToX(weight * schedule.weightReductionFactor, increments);\n}\n\nexport function increaseWeight(weight, increments) {\n  return ceilWeightToX(weight + increments, increments);\n}\n\nexport function tooManyFailures(failureCount) {\n  return failureCount >= schedule.failureRatio;\n}\n","import initState from '../store/workouts';\nimport schedule from '../constants/schedule-opts';\nimport {\n  calculateGoalWeight,\n  calculateCurrentSetFormat,\n  saveToHistory,\n  calculateStartingWarmupWeight,\n  calculateNextWarmupWeight,\n  shouldContinueWarmingUp,\n  calculateNextVariant,\n} from '../utils/weights';\n\nimport {\n  getNextLoopedArrayItem,\n  getTheDamnIndex,\n} from '../utils/arrays';\n\nexport default {\n  /**\n   *  Initial state\n   */\n  state: {\n    // keep track of different aspects of current training\n    variant: initState.variant,\n    workout: initState.workout,\n    set: initState.set,\n    exercise: initState.exercise,\n    numberOfSets: initState.numberOfSets,\n    weight: initState.weight,\n    reps: initState.reps,\n    setFormat: initState.setFormat,\n\n    // The weight goal\n    goalWeight: initState.goalWeight,\n\n    // Our local DB\n    workoutCount: initState.workoutCount,\n    history: initState.history,\n\n    // bool to keep track of warmup state\n    isWarmingUp: true,\n\n    // bools to keep track of presentational state\n    isFinished: false,\n    hasStarted: false,\n  },\n\n  /**\n   * Reducers\n   */\n  reducers: {\n    startWorkout: (state) => {\n      const exercise = schedule.workouts[state.workout][state.variant][0];\n      const exerciseInfo = schedule.exercises[exercise];\n      const setFormat = calculateCurrentSetFormat(\n        exerciseInfo,\n        state.variant,\n        state.history[exercise],\n      );\n\n      return {\n        ...state,\n        isWarmingUp: false,\n        hasStarted: true,\n        isFinished: false,\n        exercise,\n        setFormat,\n        numberOfSets: setFormat.length,\n        set: 0,\n        goalWeight: calculateGoalWeight(\n          exerciseInfo,\n          state.variant,\n          state.history[exercise],\n        ),\n        reps: setFormat[0],\n      };\n    },\n\n    startExercise: state => ({\n      ...state,\n      isWarmingUp: true,\n      weight: calculateStartingWarmupWeight(\n        state.goalWeight,\n        schedule.exercises[state.exercise].increments,\n      ),\n    }),\n\n    completeSet: (state, payload) => {\n      if (state.isWarmingUp) {\n        // Warmup set completed\n        if (shouldContinueWarmingUp(payload.weight, state.goalWeight)) {\n          // continue warming up\n          return {\n            ...state,\n            weight: calculateNextWarmupWeight(\n              state.weight,\n              schedule.exercises[state.exercise].increments,\n            ),\n          };\n        }\n        // end warmup and go to real workout.\n        return {\n          ...state,\n          weight: state.goalWeight,\n          isWarmingUp: false,\n        };\n      }\n\n      const listOfExercisesInWorkout = schedule.workouts[state.workout][state.variant];\n      const exerciseIndex = getTheDamnIndex(listOfExercisesInWorkout, state.exercise);\n\n      if (state.set + 1 >= state.setFormat.length) {\n        if (exerciseIndex + 1 >= listOfExercisesInWorkout.length) {\n          // We reached the end of this workout.\n          return {\n            ...state,\n            isFinished: true,\n            history: saveToHistory(\n              state.history,\n              state.exercise,\n              payload,\n            ),\n          };\n        }\n\n        // go to next exercise\n        const nextExercise = getNextLoopedArrayItem(listOfExercisesInWorkout, state.exercise);\n        const goalWeight = calculateGoalWeight(\n          schedule.exercises[nextExercise],\n          state.variant,\n          state.history[nextExercise],\n        );\n\n        const nextSetFormat = calculateCurrentSetFormat(\n          schedule.exercises[nextExercise],\n          state.variant,\n          state.history[nextExercise],\n        );\n\n        return {\n          ...state,\n          set: 0,\n          exercise: nextExercise,\n          isWarmingUp: true,\n          setFormat: nextSetFormat,\n          weight: calculateStartingWarmupWeight(\n            goalWeight,\n            schedule.exercises[nextExercise].increments,\n          ),\n          reps: nextSetFormat[0],\n          history: saveToHistory(\n            state.history,\n            state.exercise,\n            payload,\n          ),\n          goalWeight,\n        };\n      }\n\n      // Go to next set.\n      return {\n        ...state,\n        set: state.set + 1,\n        history: saveToHistory(\n          state.history,\n          state.exercise,\n          payload,\n        ),\n\n      };\n    },\n\n    finishWorkout: (state) => {\n      const nextWorkout = getNextLoopedArrayItem(\n        Object.keys(schedule.workouts),\n        state.workout,\n      );\n      const nextVariant = calculateNextVariant(state.workoutCount, state.variant);\n\n      return {\n        ...state,\n        isFinished: false,\n        hasStarted: false,\n        // Set next workout\n        workout: nextWorkout,\n        exercise: schedule.workouts[nextWorkout][nextVariant],\n        workoutCount: state.workoutCount + 1,\n        variant: nextVariant,\n      };\n    },\n  },\n};\n","/* global */\nimport { init } from '@rematch/core';\nimport createPersistPlugin, { getPersistor } from '@rematch/persist';\nimport createLoadingPlugin from '@rematch/loading';\nimport storage from 'redux-persist/es/storage';\nimport * as models from '../models';\n\n// Create plugins\nconst persistPlugin = createPersistPlugin({\n  version: 2,\n  storage,\n  blacklist: [],\n});\nconst loadingPlugin = createLoadingPlugin({});\n\nconst configureStore = () => {\n  const store = init({\n    models,\n    redux: {\n      middlewares: [],\n    },\n    plugins: [persistPlugin, loadingPlugin],\n  });\n\n  const persistor = getPersistor();\n  const { dispatch } = store;\n\n  return { persistor, store, dispatch };\n};\n\n\nexport default configureStore;\n","/* global window navigator fetch */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((reg) => {\n      const registration = reg;\n\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit http://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Container, Row, Col } from 'reactstrap';\nimport { Helmet } from 'react-helmet';\n\nconst Template = ({ pageTitle, children }) => (\n  <Container>\n    <Helmet>\n      <title>{pageTitle}</title>\n    </Helmet>\n\n    <Row>\n      <Col sm=\"12\">{children}</Col>\n    </Row>\n  </Container>\n);\n\nTemplate.propTypes = {\n  pageTitle: PropTypes.string,\n  children: PropTypes.element.isRequired,\n};\n\nTemplate.defaultProps = {\n  pageTitle: 'React App',\n};\n\nexport default Template;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nclass Start extends PureComponent {\n  static propTypes = {\n    onStart: PropTypes.func.isRequired,\n    Layout: PropTypes.func.isRequired,\n    workoutHistory: PropTypes.shape({}).isRequired,\n  }\n\n  render = () => {\n    const { Layout, onStart, workoutHistory } = this.props;\n    return (\n      <Layout\n        onClick={onStart}\n        nextPage=\"warmup\"\n        workoutHistory={workoutHistory}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  workoutHistory: state.workouts.history,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onStart: dispatch.workouts.startWorkout,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Start);\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nclass StartWarmup extends PureComponent {\n  static propTypes = {\n    onStart: PropTypes.func.isRequired,\n    Layout: PropTypes.func.isRequired,\n    exercise: PropTypes.string.isRequired,\n  }\n\n  render = () => {\n    const { Layout, exercise, onStart } = this.props;\n    return (\n      <Layout\n        exercise={exercise}\n        onClick={onStart}\n        nextPage=\"exercise\"\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  exercise: state.workouts.exercise,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onStart: dispatch.workouts.startExercise,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StartWarmup);\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nclass Finish extends PureComponent {\n  static propTypes = {\n    onFinish: PropTypes.func.isRequired,\n    Layout: PropTypes.func.isRequired,\n  }\n\n  render = () => {\n    const {\n      Layout, onFinish, workoutHistory, importProgress,\n    } = this.props;\n    return (\n      <Layout\n        onClick={onFinish}\n        workoutHistory={workoutHistory}\n        onClickImport={importProgress}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  workoutHistory: state.workouts.history,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onFinish: dispatch.workouts.finishWorkout,\n  importProgress: dispatch.workouts.importHistory,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Finish);\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nclass Exercise extends PureComponent {\n  static propTypes = {\n    Layout: PropTypes.func.isRequired,\n    onCompleteSet: PropTypes.func.isRequired,\n    exercise: PropTypes.string.isRequired,\n    weight: PropTypes.number.isRequired,\n    reps: PropTypes.number.isRequired,\n    isWarmingUp: PropTypes.bool.isRequired,\n    isFinished: PropTypes.bool.isRequired,\n    setFormat: PropTypes.shape([\n      PropTypes.number.isRequired,\n    ]).isRequired,\n  }\n\n  render = () => {\n    const {\n      Layout,\n      onCompleteSet,\n      exercise,\n      weight,\n      reps,\n      setFormat,\n      isWarmingUp,\n      isFinished,\n    } = this.props;\n\n    return (\n      <Layout\n        onCompleteSet={success => onCompleteSet(weight, reps, setFormat, success)}\n        exercise={exercise}\n        reps={reps}\n        weight={weight}\n        isWarmingUp={isWarmingUp}\n        isFinished={isFinished}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  exercise: state.workouts.exercise,\n  weight: state.workouts.weight,\n  reps: state.workouts.reps,\n  setFormat: state.workouts.setFormat,\n  isWarmingUp: state.workouts.isWarmingUp,\n  isFinished: state.workouts.isFinished,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onCompleteSet: (weight, reps, setFormat, success) => {\n    dispatch.workouts.completeSet({\n      weight,\n      reps,\n      sets: setFormat,\n      success,\n    });\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Exercise);\n","export const generalMessages = {\n  letsGo: \"Let's Go!\",\n  passedSet: 'I Managed This Set!',\n  failedSet: 'I Failed This Set',\n  skipSet: 'Skip this set',\n  ok: 'OK',\n  goodJob: 'Good Job!',\n  keepTrying: 'Too bad, but keep trying',\n  readyForWorkout: 'Get Ready To Start Your First Workout',\n  firstExercise: 'Your next exercise is ',\n  firstAWarmup: 'We will begin with a few warmup sets.',\n  currentExerciseIs: 'Your current exercise is: ',\n  repsAre: 'You should do ',\n  reps: 'reps',\n  weightIs: 'at ',\n  kg: 'kg',\n  exerciseIs: \"You're currently doing\",\n  thisIsAWarmupSet: 'You are currently doing a warmup set',\n  workoutFinished: 'Your workout for today is finished! Well done!',\n  comeBackIn2Days: 'Come back for your next workout in 2 days time.',\n  readyForNextWorkout: 'I am ready for the next workout, now',\n  exportProgress: 'Export your progress',\n};\n\nexport const exercises = {\n  squat: 'Barbell Squat',\n  overheadPress: 'Barbell Overhead Press',\n  rearFly: 'Rear Lateral Flys',\n  lateralRaise: 'Side Lateral Raises',\n  deadlift: 'Barbell Deadlifts',\n  bentOverRow: 'Barbell Bent-Over Rows',\n  chinUp: 'Chin-Ups',\n  uprightRow: 'Barbell Upright Row',\n  barbellBenchpress: 'Barbell Benchpress',\n  skullCrusherSuperSet: 'Skull-Crushers and EZ-Bar Benchpress Super Set',\n  dip: 'Chest Dips',\n  inclineBarbellBenchpress: 'Incline Barbell Benchpress',\n};\n\nexport const successMessages = {};\n\nexport const errorMessages = {\n  // Defaults\n  default: 'Hmm, an unknown error occured',\n  timeout: 'Server Timed Out. Check your internet connection',\n  invalidJson: 'Response returned is not valid JSON',\n};\n","import React from 'react';\nimport { Jumbotron, Container, Button } from 'reactstrap';\nimport { generalMessages } from '../../../constants/messages';\n\nconst SingleClick = (props) => (\n  <div>\n    <Jumbotron>\n      <Container fluid>\n        <h1 className=\"text-center display-3 text-primary\" >{props.title}</h1>\n        {props.subtitle && <p className=\"lead text-center\">{props.subtitle}</p>}\n        <div>\n          <Button onClick={props.onClick} color=\"info\" size=\"lg\" block>\n            {props.buttonText || generalMessages.letsGo}\n          </Button>\n        </div>\n      </Container>\n    </Jumbotron>\n  </div>\n);\n\nexport default SingleClick;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from 'reactstrap';\nimport { generalMessages } from '../../../constants/messages';\nimport { exportJsonToFile } from '../../utils/export';\n\nconst ExportProgressButton = props => (\n  <Button\n    color=\"primary\"\n    onClick={() => exportJsonToFile(props.workoutHistory)}\n    size=\"lg\"\n    block\n  >\n    {generalMessages.exportProgress}\n  </Button>\n);\n\nExportProgressButton.propTypes = {\n  workoutHistory: PropTypes.shape({}).isRequired,\n};\n\nexport default ExportProgressButton;\n","export function exportJsonToFile(json) {\n  const str = JSON.stringify(json);\n\n  // Save the file contents as a DataURI\n  const dataUri = `data:application/json;charset=utf-8,${encodeURIComponent(str)}`;\n\n  // Write it as the href for the link\n  const linkElement = window.document.createElement('a');\n  linkElement.setAttribute('href', dataUri);\n  linkElement.setAttribute('download', 'progress.json');\n  linkElement.click();\n}\n","import React, { PureComponent, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport SingleClickComponent from './UI/SingleClick';\nimport ExportProgressButton from './UI/ExportProgressButton';\n// import ImportProgressButton from './UI/ImportProgressButton';\nimport { generalMessages } from '../../constants/messages';\n\nclass Start extends PureComponent {\n  static propTypes = {\n    onClick: PropTypes.func.isRequired,\n    nextPage: PropTypes.string.isRequired,\n    history: PropTypes.shape({\n      push: PropTypes.func.isRequired,\n    }).isRequired,\n    onClickExport: PropTypes.func.isRequired,\n    workoutHistory: PropTypes.shape({}).isRequired,\n  }\n\n\n  handleClick = () => {\n    const { onClick, history, nextPage } = this.props;\n    onClick();\n    history.push(`/${nextPage}`);\n  }\n\n\n    render = () => {\n      const { workoutHistory } = this.props;\n      return (\n        <Fragment>\n          <SingleClickComponent\n            onClick={this.handleClick}\n            title={generalMessages.readyForWorkout}\n          />\n          <ExportProgressButton workoutHistory={workoutHistory} />\n        </Fragment>\n      );\n    }\n}\n\nexport default withRouter(Start);\n","import React from 'react';\nimport {\n  ButtonGroup, Jumbotron, Container, Button,\n} from 'reactstrap';\nimport { generalMessages } from '../../../constants/messages';\n\nconst BinaryClick = props => (\n  <div>\n    <Jumbotron>\n      <Container fluid>\n        <h1 className=\"text-center display-3 text-primary\">{props.title}</h1>\n        {props.subtitle && <p className=\"lead text-center\">{props.subtitle}</p>}\n        <div className=\"d-flex flex-column\">\n          <ButtonGroup size=\"lg\">\n            <Button onClick={() => props.onClick(false)} color=\"danger\" size=\"lg\">\n              {props.failureButtonText || generalMessages.no}\n            </Button>\n            <Button onClick={() => props.onClick(true)} color=\"success\" size=\"lg\">\n              {props.successButtonText || generalMessages.yes}\n            </Button>\n          </ButtonGroup>\n        </div>\n        {props.validationText && (\n        <div className=\"text-center\">\n          {props.validationText}\n        </div>\n        )}\n      </Container>\n    </Jumbotron>\n  </div>\n);\n\nexport default BinaryClick;\n","export const exerciseUrls = {\n  squat: 'https://stronglifts.com/squat/',\n  overheadPress: 'https://stronglifts.com/overhead-press/',\n  rearFly: 'https://exrx.net/WeightExercises/DeltoidPosterior/DBRearLateralRaise',\n  lateralRaise: 'https://exrx.net/WeightExercises/DeltoidLateral/DBLateralRaise',\n  deadlift: 'https://stronglifts.com/deadlift/',\n  bentOverRow: 'https://stronglifts.com/barbell-row/',\n  chinUp: 'https://stronglifts.com/pullups/',\n  uprightRow: 'https://exrx.net/WeightExercises/DeltoidLateral/BBUprightRow',\n  barbellBenchpress: 'https://stronglifts.com/bench-press/',\n  skullCrusherSuperSet: 'https://exrx.net/WeightExercises/Triceps/BBLyingTriExtSC',\n  dip: 'https://stronglifts.com/dips/',\n  inclineBarbellBenchpress: 'https://exrx.net/WeightExercises/PectoralClavicular/BBInclineBenchPress',\n};\n","export const colors = ['info', 'success', 'warning', 'danger', 'primary'];\n\nexport const rotateColors = () => colors[Math.floor(Math.random() * colors.length)];\n","import React, { Fragment, Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport BinaryClickComponent from './UI/BinaryClick';\nimport { generalMessages, exercises } from '../../constants/messages';\nimport { exerciseUrls } from '../../constants/urls';\nimport { rotateColors } from '../styles/utils';\n\nclass Exercise extends Component {\n  static propTypes = {\n    onCompleteSet: PropTypes.func.isRequired,\n    exercise: PropTypes.string.isRequired,\n    weight: PropTypes.number.isRequired,\n    reps: PropTypes.number.isRequired,\n    isWarmingUp: PropTypes.bool.isRequired,\n    isFinished: PropTypes.bool.isRequired,\n    history: PropTypes.shape({\n      push: PropTypes.func.isRequired,\n    }).isRequired,\n  }\n\n  state = {\n    responseToPerformance: '',\n  };\n\n  handleClick = (success) => {\n    const {\n      onCompleteSet,\n    } = this.props;\n\n    onCompleteSet(success);\n\n    this.setState({\n      responseToPerformance:\n        success\n          ? generalMessages.goodJob\n          : generalMessages.keepTrying,\n    });\n  }\n\n  renderSubtitle = () => {\n    const { exercise, isWarmingUp } = this.props;\n\n    let exerciseText = <span className={`text-${rotateColors()}`}>{exercises[exercise]}</span>;\n\n    if (exerciseUrls[exercise]) {\n      exerciseText = (\n        <a href={exerciseUrls[exercise]}>\n          {exerciseText}\n        </a>\n      );\n    }\n\n    if (isWarmingUp) {\n      return (\n        <Fragment>\n          <span className={`text-${rotateColors()}`}>{generalMessages.exerciseIs}</span>\n          {' '}\n          {exerciseText}\n          <br />\n          <span className={`text-${rotateColors()}`}>{generalMessages.thisIsAWarmupSet}</span>\n        </Fragment>\n      );\n    }\n\n    return (\n      <Fragment>\n        <span className={`text-${rotateColors()}`}>{generalMessages.exerciseIs}</span>\n        {' '}\n        {exerciseText}\n      </Fragment>\n    );\n  }\n\n  render = () => {\n    const {\n      weight, reps, isFinished, history,\n    } = this.props;\n    const { responseToPerformance } = this.state;\n\n    if (isFinished) {\n      history.push('/finish');\n    }\n\n    return (\n      <BinaryClickComponent\n        title={(\n          <Fragment>\n            <span className={`text-${rotateColors()}`}>{ generalMessages.repsAre }</span>\n            <span className={`text-${rotateColors()}`}>{reps}</span>\n            {' '}\n            <span className={`text-${rotateColors()}`}>{ generalMessages.reps}</span>\n            {' '}\n            <span className={`text-${rotateColors()}`}>{ generalMessages.weightIs }</span>\n            <span className={`text-${rotateColors()}`}>{weight}</span>\n            <span className={`text-${rotateColors()}`}>{ generalMessages.kg }</span>\n          </Fragment>\n          )}\n        subtitle={this.renderSubtitle()}\n        successButtonText={generalMessages.passedSet}\n        failureButtonText={generalMessages.failedSet}\n        onClick={this.handleClick}\n        validationText={responseToPerformance}\n      />\n    );\n  }\n}\n\nexport default withRouter(Exercise);\n","import React, { PureComponent, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport SingleClickComponent from './UI/SingleClick';\nimport { generalMessages, exercises } from '../../constants/messages';\n\nclass Start extends PureComponent {\n  static propTypes = {\n    onClick: PropTypes.func.isRequired,\n    nextPage: PropTypes.string.isRequired,\n    history: PropTypes.shape({\n      push: PropTypes.func.isRequired,\n    }).isRequired,\n    exercise: PropTypes.string.isRequired,\n  }\n\n  handleClick = () => {\n    const { onClick, history, nextPage } = this.props;\n    onClick();\n    history.push(`/${nextPage}`);\n  }\n\n  render = () => {\n    const { exercise } = this.props;\n    return (\n      <SingleClickComponent\n        onClick={this.handleClick}\n        title={(\n          <Fragment>\n            <span className=\"text-info\">{generalMessages.firstExercise}</span>\n            {' '}\n            <span className=\"text-warning\">{exercises[exercise]}</span>\n          </Fragment>\n          )}\n        subtitle={generalMessages.firstAWarmup}\n        buttonText={generalMessages.ok}\n      />\n    );\n  }\n}\n\nexport default withRouter(Start);\n","import React, { PureComponent, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport SingleClickComponent from './UI/SingleClick';\nimport ExportProgressButton from './UI/ExportProgressButton';\n// import ImportProgressButton from './UI/ImportProgressButton';\nimport { generalMessages } from '../../constants/messages';\n\nclass Finish extends PureComponent {\n  static propTypes = {\n    onClick: PropTypes.func.isRequired,\n    history: PropTypes.shape({\n      push: PropTypes.func.isRequired,\n    }).isRequired,\n    workoutHistory: PropTypes.object.isRequired,\n  }\n\n  handleClick = () => {\n    const { onClick, history } = this.props;\n    onClick();\n    history.push('/');\n  }\n\n    render = () => {\n      const { workoutHistory } = this.props;\n      return (\n        <Fragment>\n          <SingleClickComponent\n            onClick={this.handleClick}\n            title={generalMessages.workoutFinished}\n            subtitle={generalMessages.comeBackIn2Days}\n            buttonText={generalMessages.readyForNextWorkout}\n          />\n          <ExportProgressButton history={workoutHistory} />\n        </Fragment>\n      );\n    }\n}\nexport default withRouter(Finish);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Row, Col } from 'reactstrap';\nimport { Link } from 'react-router-dom';\n\nconst Error = ({ title, content }) => (\n  <Row>\n    <Col lg=\"4\">\n      <h2>{title}</h2>\n      <p>{content}</p>\n      <p><Link to=\"/\" className=\"btn btn-primary\">Go Home</Link></p>\n    </Col>\n  </Row>\n);\n\nError.propTypes = {\n  title: PropTypes.string,\n  content: PropTypes.string,\n};\n\nError.defaultProps = {\n  title: 'Uh oh',\n  content: 'An unexpected error came up',\n};\n\nexport default Error;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\n// Templates\nimport TemplateNothing from '../components/Templates/Nothing';\n\n// Routes\nimport StartContainer from '../../containers/Start';\nimport StartWarmupContainer from '../../containers/StartWarmup';\nimport FinishContainer from '../../containers/Finish';\nimport ExerciseContainer from '../../containers/Exercise';\n\nimport StartComponent from '../components/Start';\nimport ExerciseComponent from '../components/Exercise';\nimport StartWarmupComponent from '../components/StartWarmup';\nimport FinishComponent from '../components/Finish';\n\nimport Error from '../components/UI/Error';\n\nconst Index = () => (\n  <Switch>\n    <Route\n      exact\n      path=\"/\"\n      render={props => (\n        <TemplateNothing>\n          <StartContainer {...props} Layout={StartComponent} />\n        </TemplateNothing>\n      )}\n    />\n    <Route\n      exact\n      path=\"/warmup\"\n      render={props => (\n        <TemplateNothing>\n          <StartWarmupContainer {...props} Layout={StartWarmupComponent} />\n        </TemplateNothing>\n      )}\n    />\n    <Route\n      exact\n      path=\"/finish\"\n      render={props => (\n        <TemplateNothing>\n          <FinishContainer {...props} Layout={FinishComponent} />\n        </TemplateNothing>\n      )}\n    />\n    <Route\n      path=\"/exercise\"\n      render={props => (\n        <TemplateNothing pageTitle=\"Workout In Progress\">\n          <ExerciseContainer {...props} Layout={ExerciseComponent} />\n        </TemplateNothing>\n      )}\n    />\n    <Route\n      render={props => (\n        <TemplateNothing pageTitle=\"404 - Page not found\">\n          <Error {...props} title=\"404\" content=\"Sorry, the route you requested does not exist\" />\n        </TemplateNothing>\n      )}\n    />\n  </Switch>\n);\n\nexport default Index;\n","import React from 'react';\nimport { Row, Col, Progress } from 'reactstrap';\n\nconst Loading = () => (\n  <Row>\n    <Col md={{ size: 6, offset: 3 }}>\n      <div className=\"page-is-loading\">\n        <Progress bar animated value=\"100\">Loading</Progress>\n      </div>\n    </Col>\n  </Row>\n);\n\nexport default Loading;\n","/* global document */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/es/integration/react';\n\nimport configureStore from '../store/index';\nimport * as serviceWorker from './register-service-worker';\nimport Routes from './routes/index';\n\n// Components\nimport Loading from './components/UI/Loading';\n\n// Load css\nimport './styles/style.scss';\n\nconst { persistor, store, dispatch } = configureStore();\n// persistor.purge(); // Debug to clear persist\n\nconst Root = () => (\n  <Provider store={store}>\n    <PersistGate loading={<Loading />} persistor={persistor}>\n      <Router dispatch={dispatch} store={store} basename=\"/norbury-lifts\">\n        <Routes />\n      </Router>\n    </PersistGate>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}